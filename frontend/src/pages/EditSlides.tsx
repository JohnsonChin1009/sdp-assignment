import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import Footer from '@/layout/Footer.js'
import Slides from '@/layout/SlidesEdit.js'
const inter = Inter({ subsets: ['latin'] })
import{logout} from '@/pages/api/api'
import { useEffect, useState } from 'react'
import{getSpecificAnnouncements} from '@/pages/api/api';
import { UpdateAnnouncements } from '@/pages/api/api';

export default function Home() {
    const [newTitle, setNewTitle] = useState('');
    const [newDes, setNewDescription] = useState('');
    const [newName, setNewName] = useState('');
    const [newDate, setNewDate] = useState('');
    const [newTime, setNewTime] = useState('');
    const [newStatus, setNewStatus] = useState('');
    const[slides, setSlides] = useState([]);
    const[message, setMessage] = useState('');    
    useEffect(() => {
      

      fetchData();
    }, []);
   
        const fetchData = async () => {
            try {
                const token = localStorage.getItem('id');
                console.log(token);
                const student = await getSpecificAnnouncements(token);
                setSlides(student);
            } catch (error) {
                console.log('Error fetching data: ', error);
            }
        };
        
  const handleLogout = async()=>{
    try{
      await logout();
    }catch(error){
      console.error('Error.logging out: ', error);
    }
  };
  const updateValue = async()=>{
        try{
          const token = localStorage.getItem('id'); //Retrieving token from local storage)
          const update1 = await UpdateAnnouncements(token, newTitle, newDes, newName, newDate, newTime, newStatus )
          setSlides(update1);
          fetchData();
        }catch(error){
          console.log('Error updating value: ', error);
        }
      }
  return (
    <>
      <Head>
        <title>Home</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="APUlogo.png" />        
      </Head>
      <main className={styles.header}>                     
            <table>
                <tbody>
                    <tr>
                        <td><a href="http://localhost:3000/HomePM">
                            <Image
                            src="/APUlogo.png"
                            alt="APU Logo"
                            className={styles.vercelLogo}
                            width={50}
                            height={50}
                            priority            
                            />
                        </a>
                        </td>
                        <td><a href="http://localhost:3000/HomePM"><b className={styles.title1}>ApFYPCentre</b></a></td>                     
                        <td><a href="http://localhost:3000/ProfilePM" className={styles.button1}>Profile</a></td>
                        <td><a href="http://localhost:3000/StudentPM" className={styles.button2}>Student</a></td>
                        <td><a href="http://localhost:3000/StaffPM" className={styles.button2}>Lecturer</a></td>
                        <td><a href="http://localhost:3000/SubPM" className={styles.button2}>Submission</a></td>
                        <td> <br/></td>
                        <td><br/></td>
                        <td><a href="http://localhost:3000" className={styles.box3} onClick={handleLogout}><u>Logout</u></a></td>
                    </tr>
                </tbody>                
            </table>                                                          
      </main> 
       
      
      <div className={styles.content3}>
        <a href="http://localhost:3000/EditAnnouncement">
          <div className={styles.button5}>
            Back 
          </div>
        </a>     
      </div><br />
         
      
      <div className={styles.content1}>        
        <h3><u>Edit Announcements</u></h3>
        {slides.filter((slide)=> slide.title || slide.description).map((slide)=>(
        <div key={slide.id}> 
            <br />
            Title: <br />
            <h3>{slide.title}</h3>
            <input type="text"  required value={newTitle} onChange={(event) => setNewTitle(event.target.value)} /><br /><br />
            <p>{slide.description} <br />by {slide.projectmanager}</p><br/>
            Description:<br />            
            <textarea name="" id="" cols="50" rows="3"required value={newDes} onChange={(event) => setNewDescription(event.target.value)} ></textarea><br /><br />            
            Editor: by <br/>
            <input type="text"  required value={newName} onChange={(event) => setNewName(event.target.value)} /><br /><br />
            <div>{slide.date} {slide.time}</div><br/>
            Date: <br />
            <input type="date" required  value={newDate} onChange={(event => setNewDate(event.target.value))}/><br/>
            Time: <br/>
            <input type="time" required value={newTime} onChange={(event => setNewTime(event.target.value))}/><br/>
            <br />
            Current status (1=Show, 0=Hidden): <div>{slide.show}</div><br/>
            Status: <br />            
            <input type="checkbox" value={newStatus} onChange={(event => setNewStatus(event.target.checked ? "1" : ""))} />Show <br />
            <input type="checkbox" value={newStatus} onChange={(event => setNewStatus(event.target.checked ? "0" : ""))} />Hidden
            <br />
             <button onClick={updateValue}>Update</button>
            
            </div> ))}
      </div>{message && <p className={styles.word6}>Successfully Update.</p>}
      
      
      <Footer />
      </>
  )
}
