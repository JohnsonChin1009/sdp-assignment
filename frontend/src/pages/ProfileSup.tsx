import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import Footer from '@/layout/Footer.js'
import React, { useState } from 'react'
import FullCalendar from '@fullcalendar/react';
import dayGridPlugin from '@fullcalendar/daygrid';
import {addEvent} from '@/pages/api/api';

const inter = Inter({ subsets: ['latin'] })

//Calendar
const Calendar = () => {
  return (
    <div className={styles.Ccontentbox}>
      <FullCalendar
        plugins={[ dayGridPlugin ]}
        initialView="dayGridMonth"
        events={[
          { title: 'Event 1', date: '2023-05-01' },
          { title: 'Event 2', date: '2023-05-02' }
        ]}
      />
    </div>
  );
};

// addEvent(eventData);

  
// const Form = () => {
//   const [eventName, setEventName] = useState('initial value');
//   const [startDatetime, setStartDatetime] = useState('');
//   const [endtime, setEndtime] = useState('');
//   const [error, setError] = useState(false);
//   const [errorMessage, setErrorMessage] = useState('');

//   const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {
//     event.preventDefault();

//     try {
//       await addEvent(eventName, startDatetime, endtime);
//       // Reset form fields
//       setEventName('');
//       setStartDatetime('');
//       setEndtime('');
//     } catch (error) {
//       setError(true);
//       setErrorMessage('Error adding event');
//     }
//     console.log(addEvent)
//   };
// }

//Navigation bar
export default function Home() {
  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    // const eventName = event.target.elements.EventName.value;
    // const date = event.target.elements.date.value;
    // const time = event.target.elements.time.value;

    // const newEvent = {
    //   eventName,datetime: '$(date) $(time)',
    // };
  const [eventName, setEventName] = useState('');
  const [startDatetime, setStartDatetime] = useState('');
  const [endtime, setEndtime] = useState('');
  const [error, setError] = useState(false);
  const [errorMessage, setErrorMessage] = useState('');

    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {
      event.preventDefault();

      try {
        await addEvent(eventName, startDatetime, endtime);
        // Reset form fields
        setEventName('');
        setStartDatetime('');
        setEndtime('');
        console.log(addEvent);
        console.log(setEventName);      
      } catch (error) {
        setError(true);
        setErrorMessage('Error adding event');
      }
      console.log(addEvent);
    };
  }
  return (
    <>    
      <Head>
        <title>Profile</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-wxidth, initial-scale=1" />
        <link rel="icon" href="APUlogo.png" />        
      </Head>
      <main className={styles.header}>                     
            <table>
                <tbody>
                    <tr>
                        <td><a href="http://localhost:3000/HomePM">
                            <Image
                            src="/APUlogo.png"
                            alt="APU Logo"
                            className={styles.vercelLogo}
                            width={50}
                            height={50}
                            priority            
                            />
                        </a>
                        </td>
                        <td><a href="http://localhost:3000/HomeSupervisor"><b className={styles.title1}>ApFYPCentre</b></a></td>                     
                        <td><a href="http://localhost:3000/ProfileSup" className={styles.button3}>Profile</a></td>
                        <td><a href="http://localhost:3000/StuSup" className={styles.button2}>Student</a></td>                        
                        <td><a href="http://localhost:3000/SubSup" className={styles.button2}>Submission</a></td>
                        <td> <br/></td>
                        <td><br/></td>
                        <td><a href="http://localhost:3000" className={styles.box3}><u>Logout</u></a></td>
                    </tr>
                </tbody>                
            </table>
            <Calendar/>                                                          
      </main>       
      <div className={styles.content4}>
        <a href="http://localhost:3000/HomeSupervisor">
          <div className={styles.button5}>
            Back 
          </div>
        </a>  <br />    
      </div>     
        
      <div className={styles.line1}></div>        

        <div className={styles.contentbox1}>           
          <div className={styles.image}></div>
          <form action="">
          <div className={styles.namebox}>
          <input type="text" placeholder="Name"/><br /><br />
          <input type="text" placeholder="Field"/>
          </div> 
          <div className={styles.infobox}>
          Email  : <br />
          <input type="text" /><br />
          Tel    :<br />
          <input type="text" /><br />
          Preferable Platform :<br/>
          <input type="text" />
          <br />
          <a href="http://localhost:3000/Profile"><input type="submit" value="Edit" className={styles.button6} /></a>
          </div> 
          </form> 
          <div className={styles.infobox1}> 
          <form id="schedule-form" onSubmit={handleSubmit}>
            <br />
            Event Name: <br />
             <input type="text" name="EventName" value={"eventName"} onChange={(event) => setEventName(event.target.value)} /><br />
            Date:
            <br />
            <input type="datetime-local" id="startDatetime" name="startDatetime" /> to{' '}
            <input type="time" id="endtime" name="endtime" />
            <br />
            <button type="submit" value="Add" className={styles.button6}>
              Add
            </button>
          </form>
          
          </div> 
                                                      
           
        </div>
        
        <div></div>
      <Footer />
      </>
  )
}
